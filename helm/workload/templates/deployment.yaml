apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "workload.fullname" . }}
  labels:
    {{- include "workload.labels" . | nindent 4 }}
spec:
  {{- if not .Values.hpa.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "workload.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "workload.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "workload.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: {{ .Values.podSecurity.runAsNonRoot }}
        runAsUser: {{ .Values.podSecurity.runAsUser }}
        runAsGroup: {{ .Values.podSecurity.runAsGroup }}
        fsGroup: {{ .Values.podSecurity.runAsGroup }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          env:
            {{- range .Values.container.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: {{ .Values.podSecurity.allowPrivilegeEscalation }}
            readOnlyRootFilesystem: {{ .Values.podSecurity.readOnlyRootFilesystem }}
            capabilities:
              {{- toYaml .Values.podSecurity.capabilities | nindent 14 }}
          {{- if .Values.podSecurity.readOnlyRootFilesystem }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-run
              mountPath: /var/run
            {{- if .Values.secretManager.enabled }}
            - name: secrets-store
              mountPath: "/mnt/secrets"
              readOnly: true
            {{- end }}
          {{- end }}
      {{- if .Values.podSecurity.readOnlyRootFilesystem }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-run
          emptyDir: {}
        {{- if .Values.secretManager.enabled }}
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "workload.fullname" . }}-secrets
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

# Default values for workload chart
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

image:
  repository: us-docker.pkg.dev/PROJECT/REGISTRY/service
  tag: "dev"
  pullPolicy: IfNotPresent

replicaCount: 1

container:
  port: 8080
  env: []
  # Example:
  # - name: LOG_LEVEL
  #   value: "info"

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  # Specifies whether RBAC resources should be created
  create: true
  # Rules for the Role
  rules: []
  # Example:
  # - apiGroups: [""]
  #   resources: ["pods"]
  #   verbs: ["get", "list"]

podAnnotations: {}

podSecurity:
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  # targetMemoryUtilizationPercentage: 80

networkPolicy:
  enabled: true
  # Default deny-all, then allow specific traffic
  policyTypes:
    - Ingress
    - Egress
  ingress: []
  # Example:
  # - from:
  #     - namespaceSelector:
  #         matchLabels:
  #           name: fraudguard
  #   ports:
  #     - protocol: TCP
  #       port: 8080
  egress: []
  # Example:
  # - to: []
  #   ports:
  #     - protocol: TCP
  #       port: 443

nodeSelector: {}

tolerations: []

affinity: {}

# Secret Manager CSI configuration
secretManager:
  enabled: false
  # Example configuration for Secret Manager CSI
  # secretProviderClass:
  #   name: app-secrets
  #   spec:
  #     secretObjects:
  #       - secretName: app-secret
  #         type: Opaque
  #         data:
  #           - objectName: api-key
  #             key: api-key
  #     parameters:
  #       secrets: |
  #         - resourceName: "projects/PROJECT_ID/secrets/api-key/versions/latest"
  #           path: "api-key"

nameOverride: risk-scorer

image:
  repository: us-docker.pkg.dev/fraudguard-hackathon/fraudguard/risk-scorer
  tag: latest
  pullPolicy: Always

replicaCount: 1

container:
  port: 8080
  env:
    - name: PORT
      value: "8080"
    - name: LOG_LEVEL
      value: "info"
    - name: GEMINI_MODEL
      value: "gemini-2.5-flash"
    - name: GEMINI_PROJECT_ID
      value: "fraudguard-hackathon"
    - name: GEMINI_LOCATION
      value: "us-central1"
    - name: EXPLAIN_AGENT_URL
      value: "http://explain-agent.fraudguard.svc.cluster.local:8080"
    - name: MCP_GATEWAY_URL
      value: "http://mcp-gateway.fraudguard.svc.cluster.local:8080"
    - name: USE_VERTEX_AI
      value: "true"
    - name: USE_VERTEX_SDK
      value: "false"
    - name: PREFER_GL_API
      value: "false"
    - name: FORCE_GL_OAUTH
      value: "false"
    - name: RAG_INCLUDE_BOA
      value: "true"
    - name: USE_VERTEX_MATCHING
      value: "true"
    - name: VERTEX_EMBED_MODEL
      value: "text-embedding-004"
    - name: VERTEX_ME_INDEX_ENDPOINT
      value: "projects/237184630181/locations/us-central1/indexEndpoints/259328613503991808"
    - name: VERTEX_ME_INDEX_DEPLOYED_ID
      value: "fraudguard_transactions_1"
    - name: BOA_USERSERVICE_URL
      value: "http://userservice.boa.svc.cluster.local:8080"
    - name: BOA_HISTORY_URL
      value: "http://transactionhistory.boa.svc.cluster.local:8080"
  envFrom:
    - name: risk-scorer-gemini
    - name: boa-api-credentials

# Give the container more startup time before readiness/liveness kick in
startupProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 5
  failureThreshold: 12

resources:
  requests:
    cpu: "100m"
    memory: "256Mi"
  limits:
    cpu: "500m"
    memory: "1Gi"

service:
  type: ClusterIP
  port: 8080
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "fg-backendconfig"}'

hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70

rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["pods"]
      verbs: ["get", "list"]

serviceAccount:
  create: true
  name: ""
  annotations:
    iam.gke.io/gcp-service-account: risk-scorer@fraudguard-hackathon.iam.gserviceaccount.com

networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  egress:
    # Allow outbound to Gemini API
    - to: []
      ports:
        - protocol: TCP
          port: 443
    # Allow outbound to other fraudguard services
    - to:
        - namespaceSelector:
            matchLabels:
              name: fraudguard
      ports:
        - protocol: TCP
          port: 8080
    # Allow outbound to Bank of Anthos services
    - to:
        - namespaceSelector:
            matchLabels:
              name: boa
      ports:
        - protocol: TCP
          port: 8080
    # Allow metadata server for Workload Identity (ADC)
    - to:
        - ipBlock:
            cidr: 169.254.169.254/32
      ports:
        - protocol: TCP
          port: 80
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
  ingress:
    # Allow inbound from fraudguard namespace
    - from:
        - namespaceSelector:
            matchLabels:
              name: fraudguard
      ports:
        - protocol: TCP
          port: 8080
    # Allow GCLB health checks
    - from:
        - ipBlock:
            cidr: 35.191.0.0/16
        - ipBlock:
            cidr: 130.211.0.0/22
      ports:
        - protocol: TCP
          port: 8080

podSecurity:
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

secretManager:
  enabled: false
  secretProviderClass:
    spec:
      parameters:
        secrets: |
          - resourceName: "projects/PROJECT_ID/secrets/example-secret/versions/latest"
            path: "example-secret"

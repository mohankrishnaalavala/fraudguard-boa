nameOverride: explain-agent

image:
  repository: us-docker.pkg.dev/fraudguard-hackathon/fraudguard/explain-agent
  tag: dev
  pullPolicy: IfNotPresent

replicaCount: 1

container:
  port: 8080
  env:
    - name: PORT
      value: "8080"
    - name: LOG_LEVEL
      value: "info"
    - name: DATABASE_URL
      value: "sqlite:////var/run/audit.db"
    - name: ACTION_ORCHESTRATOR_URL
      value: "http://action-orchestrator.fraudguard.svc.cluster.local:8080"

# Give the container more startup time before readiness/liveness kick in
startupProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 5
  failureThreshold: 12

resources:
  requests:
    cpu: "50m"
    memory: "64Mi"
  limits:
    cpu: "200m"
    memory: "128Mi"

service:
  type: ClusterIP
  port: 8080
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "fg-backendconfig"}'

hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 70

rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["pods"]
      verbs: ["get", "list"]

serviceAccount:
  create: true
  name: ""
  annotations:
    iam.gke.io/gcp-service-account: explain-agent@fraudguard-hackathon.iam.gserviceaccount.com

networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  egress:
    # Allow outbound to other fraudguard services
    - to:
        - namespaceSelector:
            matchLabels:
              name: fraudguard
      ports:
        - protocol: TCP
          port: 8080
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
  ingress:
    # Allow inbound from fraudguard namespace
    - from:
        - namespaceSelector:
            matchLabels:
              name: fraudguard
      ports:
        - protocol: TCP
          port: 8080
    # Allow GCLB health checks
    - from:
        - ipBlock:
            cidr: 35.191.0.0/16
        - ipBlock:
            cidr: 130.211.0.0/22
      ports:
        - protocol: TCP
          port: 8080

podSecurity:
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# Probes tuned for cold starts on GKE Autopilot
livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6

readinessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 12
  periodSeconds: 5
  timeoutSeconds: 5
  failureThreshold: 6

secretManager:
  enabled: false
